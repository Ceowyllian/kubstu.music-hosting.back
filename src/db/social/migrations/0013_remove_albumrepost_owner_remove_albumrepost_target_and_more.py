# Generated by Django 5.1 on 2024-10-04 10:55

import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('music', '0011_album_is_removed_albumtrack_is_removed_and_more'),
        ('person', '0005_person_is_removed_personrole_is_removed_and_more'),
        ('social', '0012_albumcomment_parent_playlistcomment_parent_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='albumrepost',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='albumrepost',
            name='target',
        ),
        migrations.RemoveField(
            model_name='playlistlike',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='playlistlike',
            name='target',
        ),
        migrations.RemoveField(
            model_name='playlistrepost',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='playlistrepost',
            name='target',
        ),
        migrations.RemoveField(
            model_name='tracklike',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='tracklike',
            name='target',
        ),
        migrations.RemoveField(
            model_name='trackrepost',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='trackrepost',
            name='target',
        ),
        migrations.AlterField(
            model_name='albumcomment',
            name='target',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.RESTRICT, related_name='comments', to='music.album', verbose_name='Album'),
        ),
        migrations.AlterField(
            model_name='playlistcomment',
            name='target',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.RESTRICT, related_name='comments', to='music.playlist', verbose_name='Playlist'),
        ),
        migrations.AlterField(
            model_name='trackcomment',
            name='target',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.RESTRICT, related_name='comments', to='music.track', verbose_name='Track'),
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('target_id', models.UUIDField(editable=False, verbose_name='Target ID')),
                ('owner', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.RESTRICT, to='person.person', verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Repost',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('target_id', models.UUIDField(editable=False, verbose_name='Target ID')),
                ('owner', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.RESTRICT, to='person.person', verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Repost',
                'verbose_name_plural': 'Reposts',
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='AlbumLike',
        ),
        migrations.DeleteModel(
            name='AlbumRepost',
        ),
        migrations.DeleteModel(
            name='PlaylistLike',
        ),
        migrations.DeleteModel(
            name='PlaylistRepost',
        ),
        migrations.DeleteModel(
            name='TrackLike',
        ),
        migrations.DeleteModel(
            name='TrackRepost',
        ),
        migrations.AddConstraint(
            model_name='like',
            constraint=models.UniqueConstraint(fields=('owner', 'target_id'), name='unique_like'),
        ),
        migrations.AddConstraint(
            model_name='repost',
            constraint=models.UniqueConstraint(fields=('owner', 'target_id'), name='unique_repost'),
        ),
    ]
